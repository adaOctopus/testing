{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Learn React.js\\\\Advanced React\\\\nextjs-maxi\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient, ObjectId } from 'mongodb';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://user_1:user1@cluster0.u8qrb.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: 'blocking',\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  const client = await MongoClient.connect('mongodb+srv://user_1:user1@cluster0.u8qrb.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.data.title,\n        image: selectedMeetup.data.image,\n        address: selectedMeetup.data.address,\n        description: selectedMeetup.data.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/Learn React.js/Advanced React/nextjs-maxi/pages/[meetupId]/index.js"],"names":["Fragment","Head","MeetupDetail","MongoClient","ObjectId","MeetupDetails","props","meetupData","title","description","image","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","selectedMeetup","findOne","id","data"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAE1B,sBAAO,QAAC,QAAD;AAAA,4BACH,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAKH,QAAC,YAAD;AACJ,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KADpB;AAEJ,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAFpB;AAGJ,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAHtB;AAIJ,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJ1B;AAAA;AAAA;AAAA;AAAA,YALG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAYH;;AAED,OAAO,eAAeG,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CAAoB,2FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,UADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAM,KAAK;AAC3BC,MAAAA,MAAM,EAAE;AACRC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADF;AADmB,KAAL,CAAnB;AAFJ,GAAP;AAOH;AAED,OAAO,eAAeC,cAAf,CAA+BC,OAA/B,EAAwC;AAE3C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,QAAMf,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CAAoB,2FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMiB,cAAc,GAAG,MAAMlB,iBAAiB,CAACmB,OAAlB,CAA0B;AAAEf,IAAAA,GAAG,EAAEhB,QAAQ,CAACwB,QAAD;AAAf,GAA1B,CAA7B;AAEAf,EAAAA,MAAM,CAACS,KAAP;AAGA,SAAO;AACHhB,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACR6B,QAAAA,EAAE,EAAEF,cAAc,CAACd,GAAf,CAAmBS,QAAnB,EADI;AAERrB,QAAAA,KAAK,EAAE0B,cAAc,CAACG,IAAf,CAAoB7B,KAFnB;AAGRE,QAAAA,KAAK,EAAEwB,cAAc,CAACG,IAAf,CAAoB3B,KAHnB;AAIRC,QAAAA,OAAO,EAAEuB,cAAc,CAACG,IAAf,CAAoB1B,OAJrB;AAKRF,QAAAA,WAAW,EAAEyB,cAAc,CAACG,IAAf,CAAoB5B;AALzB;AADT;AADJ,GAAP;AAWH;AAED,eAAeJ,aAAf","sourcesContent":["import { Fragment } from 'react';\nimport Head from 'next/head';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient, ObjectId } from 'mongodb'\n\nfunction MeetupDetails(props) {\n\n    return <Fragment>\n        <Head>\n            <title>{props.meetupData.title}</title>\n            <meta name=\"description\" content={props.meetupData.description}/>\n        </Head>\n        <MeetupDetail \n    image={props.meetupData.image}\n    title={props.meetupData.title}\n    address={props.meetupData.address}\n    description={props.meetupData.description}/>\n    </Fragment>\n\n}\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect('mongodb+srv://user_1:user1@cluster0.u8qrb.mongodb.net/meetups?retryWrites=true&w=majority');\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\n\n    client.close();\n    return {\n        fallback: 'blocking',\n        paths: meetups.map( meetup => ({ \n            params: {\n            meetupId: meetup._id.toString()\n        }}))\n    }\n}\n\nexport async function getStaticProps( context) {\n\n    const meetupId = context.params.meetupId;\n    console.log(meetupId)\n\n    const client = await MongoClient.connect('mongodb+srv://user_1:user1@cluster0.u8qrb.mongodb.net/meetups?retryWrites=true&w=majority');\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const selectedMeetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId)});\n\n    client.close();\n\n\n    return {\n        props: {\n            meetupData: {\n                id: selectedMeetup._id.toString(),\n                title: selectedMeetup.data.title,\n                image: selectedMeetup.data.image,\n                address: selectedMeetup.data.address,\n                description: selectedMeetup.data.description\n            }\n        }\n    }\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}