{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Learn React.js\\\\Advanced React\\\\nextjs-maxi\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/Learn React.js/Advanced React/nextjs-maxi/pages/[meetupId]/index.js"],"names":["Fragment","Head","MeetupDetail","MeetupDetails","props","meetupData","title","description","image","address"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAE1B,sBAAO,QAAC,QAAD;AAAA,4BACH,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAKH,QAAC,YAAD;AACJ,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KADpB;AAEJ,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAFpB;AAGJ,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAHtB;AAIJ,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJ1B;AAAA;AAAA;AAAA;AAAA,YALG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAYH;;KAdQJ,a;;AA8DT,eAAeA,aAAf","sourcesContent":["import { Fragment } from 'react';\nimport Head from 'next/head';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient, ObjectId } from 'mongodb'\n\nfunction MeetupDetails(props) {\n\n    return <Fragment>\n        <Head>\n            <title>{props.meetupData.title}</title>\n            <meta name=\"description\" content={props.meetupData.description}/>\n        </Head>\n        <MeetupDetail \n    image={props.meetupData.image}\n    title={props.meetupData.title}\n    address={props.meetupData.address}\n    description={props.meetupData.description}/>\n    </Fragment>\n\n}\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect('mongodb+srv://user_1:user1@cluster0.u8qrb.mongodb.net/meetups?retryWrites=true&w=majority');\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\n\n    client.close();\n    return {\n        fallback: 'blocking',\n        paths: meetups.map( meetup => ({ \n            params: {\n            meetupId: meetup._id.toString()\n        }}))\n    }\n}\n\nexport async function getStaticProps( context) {\n\n    const meetupId = context.params.meetupId;\n    console.log(meetupId)\n\n    const client = await MongoClient.connect('mongodb+srv://user_1:user1@cluster0.u8qrb.mongodb.net/meetups?retryWrites=true&w=majority');\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const selectedMeetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId)});\n\n    client.close();\n\n\n    return {\n        props: {\n            meetupData: {\n                id: selectedMeetup._id.toString(),\n                title: selectedMeetup.data.title,\n                image: selectedMeetup.data.image,\n                address: selectedMeetup.data.address,\n                description: selectedMeetup.data.description\n            }\n        }\n    }\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}